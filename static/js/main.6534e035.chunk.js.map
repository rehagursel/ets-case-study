{"version":3,"sources":["components/layout/MainNavigation.module.css","components/hotels/HotelItem.module.css","components/hotels/NewHotelForm.module.css","components/pagination/Pagination.module.css","components/hotels/HotelsList.module.css","components/UI/Modal.module.css","components/hotels/HotelDeleteModal.module.css","components/UI/Button.module.css","components/hotels/NoHotelsFound.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","store/sort-slice.js","store/list-slice.js","store/index.js","components/UI/Button.js","hooks/use-locale.js","lib/local-storage.js","components/hotels/HotelItem.js","components/pagination/Pagination.js","components/hotels/HotelsList.js","lib/sort-functions.js","components/hotels/NoHotelsFound.js","components/UI/LoadingSpinner.js","pages/AllHotels.js","components/UI/Card.js","components/UI/Input.js","components/hotels/NewHotelForm.js","pages/NewHotel.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/Modal.js","components/hotels/HotelDeleteModal.js","App.js","index.js"],"names":["module","exports","sortSlice","createSlice","name","initialState","sortIsScore","reducers","sort","state","action","sortType","payload","sortIsScoreActions","actions","listSlice","hotelsList","deleteHotelName","addHotelToList","newHotel","find","hotel","push","id","score","src","editTime","logTime","a","b","editHotelAtTheList","existingHotel","removeHotelFromList","filter","saveHotelName","listActions","store","configureStore","reducer","list","Button","props","className","classes","type","onClick","disabled","children","localeReducer","data","error","status","responseData","errorMessage","useLocale","requestFunction","startWithPending","useReducer","localeState","dispatch","sendRequest","useCallback","requestData","message","loadLocalListHotels","addedHotels","Object","keys","localStorage","forEach","key","obj","getItem","unshift","JSON","parse","editHotelScore","setItem","stringify","saveAddedHotel","includes","Error","deleteAddedHotel","removeItem","HotelItem","useState","setScore","isHover","setIsHover","sortMethodIsScore","useSelector","sendEditRequest","editStatus","useDispatch","time","Date","useEffect","item","onMouseEnter","onMouseLeave","cover","alt","infoBox","hotelName","toFixed","deleteBtn","Pagination","hotelsPerPage","totalHotels","paginate","pageNumbers","i","Math","ceil","paginationDiv","pagination","map","number","pageItem","pageLink","HotelsList","hotels","isSort","setIsSort","currentPage","setCurrentPage","indexOfLastHotel","indexOfFirstHotel","isSortingDescending","setIsSortingDescending","sortedHotels","hotelA","hotelB","sortHotelsAsScoreChange","descending","sortHotelsAsScore","currentHotels","slice","Fragment","addButton","to","sorting","length","pageNumber","NoHotelsFound","noHotel","LoadingSpinner","spinner","AllHotels","reduxHotelsList","sendLoadRequest","loadedHotels","hotelList","onShowModal","Card","card","Input","React","forwardRef","ref","htmlFor","input","label","required","onChange","NewBookForm","isEntered","setIsEntered","nameInputRef","useRef","scoreInputRef","finishFocusedHandler","statusType","checkButton","when","form","onSubmit","event","preventDefault","enteredName","current","value","enteredScore","onAddHotel","onFocus","loading","control","min","max","step","warning","NewHotel","sendSaveRequest","history","useHistory","timer","setTimeout","clearTimeout","NewHotelForm","newHotelData","MainNavigation","header","logo","bold","lighter","nav","activeClassName","active","Layout","main","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDom","createPortal","HotelDeleteModal","reduxDeleteHotelName","sendDeleteRequest","deleteStatus","setModalIsShown","deleteHotelHandler","closeModalHandler","deleteButton","deleteModal","deleteModalMain","actionButtons","App","modalIsShown","path","exact","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.6534e035.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"bold\":\"MainNavigation_bold__134On\",\"lighter\":\"MainNavigation_lighter__Hf5Q0\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HotelItem_item__39osi\",\"cover\":\"HotelItem_cover__1tiAa\",\"infoBox\":\"HotelItem_infoBox__3FuBJ\",\"hotelName\":\"HotelItem_hotelName__43LTa\",\"score\":\"HotelItem_score__1q-Gr\",\"deleteBtn\":\"HotelItem_deleteBtn__2njJ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewHotelForm_form__1hjg6\",\"loading\":\"NewHotelForm_loading__3Ts7w\",\"control\":\"NewHotelForm_control__1RA6K\",\"actions\":\"NewHotelForm_actions__2qgvm\",\"warning\":\"NewHotelForm_warning__3hkEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationDiv\":\"Pagination_paginationDiv__yCnjf\",\"pagination\":\"Pagination_pagination__1Z03K\",\"pageLink\":\"Pagination_pageLink__1MeeL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"HotelsList_list__EoyAZ\",\"sorting\":\"HotelsList_sorting__1ZcgP\",\"addButton\":\"HotelsList_addButton__2yGbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\",\"content\":\"Modal_content__3zUnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteModal\":\"HotelDeleteModal_deleteModal__riEBa\",\"deleteModalMain\":\"HotelDeleteModal_deleteModalMain__oTR36\",\"actionButtons\":\"HotelDeleteModal_actionButtons__1s7Hk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"increment\":\"Button_increment__2zaHA\",\"decrement\":\"Button_decrement__3Omjk\",\"add\":\"Button_add__1JMLN\",\"addConfirm\":\"Button_addConfirm__1MPZG\",\"deleteHotelBtn\":\"Button_deleteHotelBtn__2uLNn\",\"deleteHotelBtnConfirm\":\"Button_deleteHotelBtnConfirm__3xPre\",\"cancelBtn\":\"Button_cancelBtn__1lpMD\",\"delete\":\"Button_delete__2V5ee\",\"quit\":\"Button_quit__3nqPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noHotel\":\"NoHotelsFound_noHotel__2S6DK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst sortSlice = createSlice({\n  name: \"sort\",\n  initialState: { sortIsScore: false },\n  reducers: {\n    sort(state, action) {\n      const sortType = action.payload;\n      state.sortIsScore = sortType;\n    },\n  },\n});\n\nexport const sortIsScoreActions = sortSlice.actions;\n\nexport default sortSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst listSlice = createSlice({\n  name: \"list\",\n  initialState: {\n    hotelsList: [],\n    deleteHotelName: [],\n  },\n  reducers: {\n    addHotelToList(state, action) {\n      const newHotel = action.payload;\n      const existingHotel = state.hotelsList.find(\n        (hotel) => hotel.name === newHotel.name\n      );\n      if (!existingHotel) {\n        state.hotelsList.push({\n          id: newHotel.name,\n          score: +newHotel.score,\n          name: newHotel.name,\n          src: \"https://www.etstur.com/resources_t/img/hotel/default_image.png\",\n          editTime: newHotel.editTime,\n          logTime: newHotel.logTime,\n        });\n      }\n      state.hotelsList?.sort((a, b) =>\n        a.logTime < b.logTime ? 1 : b.logTime < a.logTime ? -1 : 0\n      );\n    },\n    editHotelAtTheList(state, action) {\n      const newHotel = action.payload;\n      const existingHotel = state.hotelsList.find(\n        (hotel) => hotel.name === newHotel.name\n      );\n      existingHotel.score = +newHotel.score;\n      existingHotel.editTime = newHotel.editTime;\n    },\n    removeHotelFromList(state, action) {\n      const name = action.payload;\n      state.hotelsList = state.hotelsList.filter(\n        (hotel) => hotel.name !== name\n      );\n    },\n    saveHotelName(state, action) {\n      const name = action.payload;\n      state.deleteHotelName = name;\n    },\n  },\n});\n\nexport const listActions = listSlice.actions;\n\nexport default listSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport sortSlice from \"./sort-slice\";\nimport listSlice from \"./list-slice\";\n\nconst store = configureStore({\n  reducer: { sort: sortSlice.reducer, list: listSlice.reducer },\n});\n\nexport default store;","import classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={classes[`${props.className}`]}\n      type={props.type || \"button\"}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useReducer, useCallback } from \"react\";\n\nfunction localeReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"error\",\n    };\n  }\n\n  return state;\n}\n\nfunction useLocale(requestFunction, startWithPending = false) {\n  const [localeState, dispatch] = useReducer(localeReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message,\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...localeState,\n  };\n}\n\nexport default useLocale;\n","export function loadLocalListHotels() {\n  const addedHotels = [];\n\n  Object.keys(localStorage).forEach((key) => {\n    let obj = localStorage.getItem(key);\n    addedHotels.unshift(JSON.parse(obj));\n  });\n  return addedHotels;\n}\n\nexport function editHotelScore(hotel) {\n  localStorage.setItem(\n    hotel.name,\n    JSON.stringify({\n      key: hotel.name,\n      id: hotel.name,\n      score: hotel.score,\n      name: hotel.name,\n      src: \"https://www.etstur.com/resources_t/img/hotel/default_image.png\",\n      editTime: hotel.editTime,\n      logTime: hotel.logTime,\n    })\n  );\n  return null;\n}\n\nexport function saveAddedHotel(hotel) {\n  if (Object.keys(localStorage).includes(hotel.name)) {\n    throw new Error(\"Bu otel listede mevcut\");\n  } else {\n    localStorage.setItem(\n      hotel.name,\n      JSON.stringify({\n        key: hotel.name,\n        id: hotel.name,\n        score: hotel.score,\n        name: hotel.name,\n        src: \"https://www.etstur.com/resources_t/img/hotel/default_image.png\",\n        editTime: hotel.editTime,\n        logTime: hotel.logTime,\n      })\n    );\n    return null;\n  }\n}\n\nexport function deleteAddedHotel(name) {\n  localStorage.removeItem(name);\n  return null;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Button from \"../UI/Button\";\nimport useLocale from \"../../hooks/use-locale\";\nimport { editHotelScore } from \"../../lib/local-storage\";\nimport { sortIsScoreActions } from \"../../store/sort-slice\";\nimport { listActions } from \"../../store/list-slice\";\n\nimport classes from \"./HotelItem.module.css\";\n\nconst HotelItem = (props) => {\n  const [score, setScore] = useState(+props.score);\n  const [isHover, setIsHover] = useState(false);\n\n  const sortMethodIsScore = useSelector((state) => state.sort.sortIsScore);\n\n  const { sendRequest: sendEditRequest, status: editStatus } =\n    useLocale(editHotelScore);\n  const dispatch = useDispatch();\n\n  const time = new Date();\n  useEffect(() => {\n    if (!sortMethodIsScore) {\n      return;\n    }\n    sendEditRequest({\n      name: props.name,\n      score: score,\n      editTime: Date.parse(time),\n      logTime: props.logTime,\n    });\n  }, [score]);\n\n  useEffect(() => {\n    if (editStatus === \"completed\") {\n      dispatch(\n        listActions.editHotelAtTheList({\n          name: props.name,\n          score: score,\n          editTime: Date.parse(time),\n        })\n      );\n    }\n  }, [editStatus, score]);\n\n  const saveHotelNameHandler = () => {\n    dispatch(listActions.saveHotelName(props.name));\n  };\n\n  const incrementHandler = () => {\n    if (score < 10) {\n      setScore((score) => +(score + 0.1).toFixed(1));\n    }\n    dispatch(sortIsScoreActions.sort(true));\n  };\n\n  const decrementHandler = () => {\n    if (score > 0.1) {\n      setScore((score) => +(score - 0.1).toFixed(1));\n    }\n    dispatch(sortIsScoreActions.sort(true));\n  };\n\n  const deleteButtonAddHandler = () => {\n    setIsHover(true);\n  };\n\n  const deleteButtonKillHandler = () => {\n    setIsHover(false);\n  };\n\n  return (\n    <li className={classes.item}>\n      <div\n        onMouseEnter={deleteButtonAddHandler}\n        onMouseLeave={deleteButtonKillHandler}\n        className={classes.cover}\n      >\n        <img src={props.src} alt=\"hotel-cover\" />\n        <div className={classes.infoBox}>\n          <h1 className={classes.hotelName}>{props.name}</h1>\n          <p className={classes.score}>{score} Puan</p>\n          <Button\n            className={\"increment\"}\n            type=\"button\"\n            onClick={incrementHandler}\n          >\n            PUAN ARTIR\n          </Button>\n          <Button\n            className={\"decrement\"}\n            type=\"button\"\n            onClick={decrementHandler}\n          >\n            PUAN AZALT\n          </Button>\n        </div>\n        <div className={classes.deleteBtn}>\n          {isHover && (\n            <Button\n              className={\"delete\"}\n              type=\"button\"\n              onClick={() => {\n                saveHotelNameHandler();\n                props.onClick();\n              }}\n            >\n              &#x2715;\n            </Button>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default HotelItem;\n","import React from \"react\";\nimport classes from \"./Pagination.module.css\";\n\nconst Pagination = ({ hotelsPerPage, totalHotels, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalHotels / hotelsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className={classes.paginationDiv}>\n      <nav>\n        <ul className={classes.pagination}>\n          <span>\n            <i className=\"arrow left\"></i>\n          </span>\n          {pageNumbers.map((number) => (\n            <li key={number} className={classes.pageItem}>\n              {\n                <button\n                  className={classes.pageLink}\n                  onClick={() => paginate(number)}\n                >\n                  {number}\n                </button>\n              }\n            </li>\n          ))}\n          <span>\n            <i className=\"arrow right\"></i>\n          </span>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport HotelItem from \"./HotelItem\";\nimport { sortIsScoreActions } from \"../../store/sort-slice\";\nimport {\n  sortHotelsAsScore,\n  sortHotelsAsScoreChange,\n} from \"../../lib/sort-functions\";\nimport Pagination from \"../../components/pagination/Pagination\";\nimport classes from \"./HotelsList.module.css\";\n\nconst HotelsList = ({ hotels, onClick }) => {\n  const [isSort, setIsSort] = useState(false);\n  const [hotelsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const indexOfLastHotel = currentPage * hotelsPerPage;\n  const indexOfFirstHotel = indexOfLastHotel - hotelsPerPage;\n  const [isSortingDescending, setIsSortingDescending] = useState(false);\n\n  const sortMethodIsScore = useSelector((state) => state.sort.sortIsScore);\n  const dispatch = useDispatch();\n\n  function changeSortHandler() {\n    dispatch(sortIsScoreActions.sort(false));\n    setIsSortingDescending(isSortingDescending=>!isSortingDescending)\n    setIsSort(true);\n  }\n\n  let sortedHotels = hotels;\n\n  if (sortMethodIsScore) {\n    sortedHotels = sortHotelsAsScoreChange(hotels);\n  }\n\n  if (isSort) {\n    sortedHotels = sortHotelsAsScore(hotels, isSortingDescending);\n  }\n\n  const currentHotels = sortedHotels.slice(indexOfFirstHotel, indexOfLastHotel);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  return (\n    <React.Fragment>\n      <div className={classes.addButton}>\n        <Link to=\"/new-hotel\" className=\"addBtn\">\n          +\n        </Link>\n        <p>OTEL EKLE</p>\n      </div>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          {isSortingDescending ?  \"▲ Puan (Artan)\" : \"▼ Puan (Azalan)\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {currentHotels.map((hotel) => (\n          <HotelItem\n            key={hotel.id}\n            id={hotel.id}\n            name={hotel.name}\n            score={+hotel.score}\n            logTime={hotel.logTime}\n            src={hotel.src}\n            onClick={onClick}\n          />\n        ))}\n      </ul>\n      <Pagination\n        hotelsPerPage={hotelsPerPage}\n        totalHotels={sortedHotels.length}\n        paginate={paginate}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default HotelsList;\n","export const sortHotelsAsScore = (hotels, descending) => {\n  return hotels?.sort((hotelA, hotelB) => {\n    if (descending) {\n      return +hotelA.score < +hotelB.score ? 1 : -1;\n    } else {\n      return +hotelA.score > +hotelB.score ? 1 : -1;\n    }\n  });\n};\n\nexport const sortHotelsAsScoreChange = (hotels) => {\n  return hotels?.sort((hotelA, hotelB) => {\n    return hotelA.score > hotelB.score\n      ? 1\n      : hotelA.score < hotelB.score\n      ? -1\n      : 0 || hotelA.editTime > hotelB.editTime\n      ? 1\n      : hotelA.editTime < hotelB.editTime\n      ? -1\n      : 0;\n  });\n};\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoHotelsFound.module.css\";\n\nconst NoHotelsFound = () => {\n  \n  return (\n    <div className={classes.noHotel}>\n      <p>Otel listesi boş!</p>\n      <Link to=\"/new-hotel\" className=\"btn\">\n        Yeni Otel Ekle\n      </Link>\n    </div>\n  );\n};\n\nexport default NoHotelsFound;\n","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n};\n\nexport default LoadingSpinner;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport HotelsList from \"../components/hotels/HotelsList\";\nimport NoHotelsFound from \"../components/hotels/NoHotelsFound\";\nimport { loadLocalListHotels } from \"../lib/local-storage\";\nimport useLocale from \"../hooks/use-locale\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { listActions } from \"../store/list-slice\";\n\nconst AllHotels = (props) => {\n  const reduxHotelsList = useSelector((state) => state.list.hotelsList);\n  const dispatch = useDispatch();\n\n  const {\n    sendRequest: sendLoadRequest,\n    status,\n    data: loadedHotels,\n  } = useLocale(loadLocalListHotels, true);\n\n  useEffect(() => {\n    sendLoadRequest();\n  }, []);\n\n  useEffect(() => {\n    loadedHotels?.forEach((hotel) =>\n      dispatch(listActions.addHotelToList(hotel))\n    );\n  }, [loadedHotels]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedHotels.length === 0) {\n    return <NoHotelsFound />;\n  }\n\n  const hotelList = [...reduxHotelsList];\n\n  return (\n    <React.Fragment>\n      <HotelsList hotels={hotelList} onClick={props.onShowModal} />\n    </React.Fragment>\n  );\n};\n\nexport default AllHotels;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst Input = React.forwardRef((props, ref) => {\n  return (\n    <div>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input required ref={ref} {...props.input} onChange={props.onChange} />\n    </div>\n  );\n});\n\nexport default Input;\n","import React, { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Button from \"../UI/Button\";\nimport Input from \"../UI/Input\";\n\nimport classes from \"./NewHotelForm.module.css\";\n\nconst NewBookForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n\n  const nameInputRef = useRef();\n  const scoreInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredScore = scoreInputRef.current.value;\n    const time = new Date();\n\n    props.onAddHotel({\n      name: enteredName,\n      score: enteredScore,\n      logTime: Date.parse(time),\n      editTime: Date.parse(time),\n    });\n  }\n\n  function formFocusedHandler() {\n    setIsEntered(true);\n  }\n\n  function finishFocusedHandler() {\n    setIsEntered(false);\n  }\n\n  if (props.statusType.status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  let checkButton = (\n    <Button className={\"add\"} type=\"submit\" onClick={finishFocusedHandler}>\n      EKLE\n    </Button>\n  );\n\n  if (props.statusType.status === \"completed\") {\n    checkButton = (\n      <Button\n        className={\"addConfirm\"}\n        type=\"submit\"\n        onClick={finishFocusedHandler}\n      >\n        &#x2713; EKLENDİ\n      </Button>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={isEntered}\n        message=\"Are you sure, you want to leave? Entered data will be lost!!\"\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          onFocus={formFocusedHandler}\n        >\n          {props.status === \"pending\" && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n          <div className={classes.control}>\n            <Input\n              className={classes.control}\n              ref={nameInputRef}\n              label={\"Otel Adı\"}\n              input={{\n                htmlFor: \"name\",\n                id: \"name\",\n                type: \"text\",\n              }}\n            />\n          </div>\n          <div className={classes.control}>\n            <Input\n              ref={scoreInputRef}\n              label={\"Puan\"}\n              input={{\n                htmlFor: \"score\",\n                id: \"score\",\n                type: \"number\",\n                min: \"1\",\n                max: \"10\",\n                step: \".1\",\n              }}\n            />\n          </div>\n          {checkButton}\n          {props.statusType.status === \"error\" && (\n            <div className={classes.warning}>{props.statusType.error}</div>\n          )}\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default NewBookForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport NewHotelForm from \"../components/hotels/NewHotelForm\";\nimport useLocale from \"../hooks/use-locale\";\nimport { saveAddedHotel } from \"../lib/local-storage\";\nimport { listActions } from \"../store/list-slice\";\nimport { sortIsScoreActions } from \"../store/sort-slice\";\n\nconst NewHotel = () => {\n  const {\n    sendRequest: sendSaveRequest,\n    status,\n    error,\n  } = useLocale(saveAddedHotel);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status !== \"completed\") {\n      return;\n    }\n    const timer = setTimeout(() => {\n      history.push(\"/hotels-list\");\n    }, 600);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [status, history]);\n\n  const loadHotelHandler = (newHotelData) => {\n    dispatch(sortIsScoreActions.sort(false));\n    sendSaveRequest(newHotelData);\n    dispatch(listActions.addHotelToList(newHotelData));\n  };\n\n  return (\n    <React.Fragment>\n      <NewHotelForm\n        statusType={{ status: status, error: error }}\n        onAddHotel={loadHotelHandler}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default NewHotel;\n","import { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>\n        <span className={classes.bold}>ets</span>\n        <span className={classes.lighter}>tur</span>\n      </div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/hotels-list\" activeClassName={classes.active}>\n              Oteller\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-hotel\" activeClassName={classes.active}>\n              Yeni Otel Ekle\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport MainNavigation from \"./MainNavigation\";\n\nimport classes from \"./Layout.module.css\";\n\nconst Layout = (props) => {\n  return (\n    <React.Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport classes from \"./Modal.module.css\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClick} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {ReactDom.createPortal(\n        <Backdrop onClick={props.onClick} />,\n        portalElement\n      )}\n      {ReactDom.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Modal from \"../UI/Modal\";\nimport Button from \"../UI/Button\";\nimport useLocale from \"../../hooks/use-locale\";\nimport { deleteAddedHotel } from \"../../lib/local-storage\";\nimport { listActions } from \"../../store/list-slice\";\n\nimport classes from \"./HotelDeleteModal.module.css\";\n\nconst HotelDeleteModal = (props) => {\n  const reduxDeleteHotelName = useSelector(\n    (state) => state.list.deleteHotelName\n  );\n  const { sendRequest: sendDeleteRequest, status: deleteStatus } =\n    useLocale(deleteAddedHotel);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (deleteStatus !== \"completed\") {\n      return;\n    }\n    dispatch(listActions.removeHotelFromList(reduxDeleteHotelName));\n    const timer = setTimeout(() => {\n      props.setModalIsShown(false);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [deleteStatus, reduxDeleteHotelName, props.setModalIsShown]);\n\n  const deleteHotelHandler = () => {\n    sendDeleteRequest(reduxDeleteHotelName);\n  };\n\n  const closeModalHandler = () => {\n    props.setModalIsShown(false);\n  };\n\n  let deleteButton = (\n    <Button\n      className={\"deleteHotelBtn\"}\n      type=\"button\"\n      onClick={deleteHotelHandler}\n    >\n      OTELİ SİL\n    </Button>\n  );\n\n  if (deleteStatus === \"completed\") {\n    deleteButton = (\n      <Button\n        className={\"deleteHotelBtnConfirm\"}\n        type=\"button\"\n        onClick={deleteHotelHandler}\n      >\n        &#x2713; SİLİNDİ\n      </Button>\n    );\n  }\n\n  return (\n    <Modal onClick={closeModalHandler}>\n      <div className={classes.deleteModal}>\n        <div className={classes.deleteModalMain}>\n          <h1>Oteli Sil</h1>\n          <p>\n            <span>{reduxDeleteHotelName}</span>'i silmek istediğinizden emin\n            misiniz?\n          </p>\n          <div className={classes.actionButtons}>\n            {deleteButton}\n            <Button\n              className={\"cancelBtn\"}\n              type=\"button\"\n              onClick={closeModalHandler}\n            >\n              VAZGEÇ\n            </Button>\n          </div>\n        </div>\n      </div>\n      <Button className={\"quit\"} type=\"button\" onClick={closeModalHandler}>\n        &#x2715;\n      </Button>\n    </Modal>\n  );\n};\n\nexport default HotelDeleteModal;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\n\nimport AllHotels from \"./pages/AllHotels\";\nimport NewHotel from \"./pages/NewHotel\";\nimport Layout from \"./components/layout/Layout\";\nimport HotelDeleteModal from \"./components/hotels/HotelDeleteModal\";\n\nfunction App() {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  let history = useHistory();\n  useEffect(() => {\n    history.push(\"/hotels-list\");\n  }, [history]);\n\n  const showModalHandler = () => {\n    setModalIsShown(true);\n  };\n\n  return (\n    <Layout>\n      <Suspense>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/hotels-list\" />\n          </Route>\n          {modalIsShown && (\n            <HotelDeleteModal\n              modalIsShown={modalIsShown}\n              setModalIsShown={setModalIsShown}\n            />\n          )}\n          <Route path=\"/hotels-list\" exact>\n            <AllHotels onShowModal={showModalHandler} />\n          </Route>\n          <Route path=\"/new-hotel\">\n            <NewHotel />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/index\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}