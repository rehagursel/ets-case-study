{"version":3,"sources":["store/list-slice.js","components/UI/Button.js","components/layout/MainNavigation.module.css","store/sort-slice.js","components/hotels/HotelItem.module.css","hooks/use-locale.js","lib/local-storage.js","components/pagination/Pagination.module.css","components/hotels/HotelsList.module.css","components/UI/Modal.module.css","components/hotels/HotelDeleteModal.module.css","components/UI/LoadingSpinner.js","components/UI/Button.module.css","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","store/index.js","components/hotels/HotelItem.js","components/pagination/Pagination.js","components/hotels/HotelsList.js","lib/sort-functions.js","pages/AllHotels.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/Modal.js","components/hotels/HotelDeleteModal.js","App.js","index.js"],"names":["listSlice","createSlice","name","initialState","hotelsList","deleteHotelName","reducers","addHotelToList","state","action","newHotel","payload","find","hotel","push","id","score","src","editTime","logTime","sort","a","b","editHotelAtTheList","existingHotel","removeHotelFromList","filter","saveHotelName","listActions","actions","Button","props","className","classes","type","onClick","disabled","children","module","exports","sortSlice","sortIsScore","sortType","sortIsScoreActions","localeReducer","data","error","status","responseData","errorMessage","useLocale","requestFunction","startWithPending","useReducer","localeState","dispatch","sendRequest","useCallback","requestData","message","loadLocalListHotels","addedHotels","Object","keys","localStorage","forEach","key","obj","getItem","unshift","JSON","parse","editHotelScore","setItem","stringify","saveAddedHotel","includes","Error","deleteAddedHotel","removeItem","LoadingSpinner","spinner","store","configureStore","reducer","list","HotelItem","useState","setScore","isHover","setIsHover","sortMethodIsScore","useSelector","sendEditRequest","editStatus","useDispatch","time","Date","useEffect","item","onMouseEnter","onMouseLeave","cover","alt","infoBox","hotelName","toFixed","deleteBtn","Pagination","hotelsPerPage","totalHotels","paginate","pageNumbers","i","Math","ceil","paginationDiv","pagination","map","number","pageItem","pageLink","HotelsList","hotels","isSort","setIsSort","currentPage","setCurrentPage","indexOfLastHotel","indexOfFirstHotel","isSortingDescending","setIsSortingDescending","sortedHotels","hotelA","hotelB","sortHotelsAsScoreChange","descending","sortHotelsAsScore","currentHotels","slice","Fragment","addButton","to","sorting","length","pageNumber","NoHotelsFound","React","lazy","AllHotels","reduxHotelsList","sendLoadRequest","loadedHotels","hotelList","onShowModal","MainNavigation","header","logo","bold","lighter","nav","activeClassName","active","Layout","main","Backdrop","backdrop","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDom","createPortal","HotelDeleteModal","reduxDeleteHotelName","sendDeleteRequest","deleteStatus","timer","setTimeout","setModalIsShown","clearTimeout","deleteHotelHandler","closeModalHandler","deleteButton","deleteModal","deleteModalMain","actionButtons","NewHotel","App","modalIsShown","path","exact","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.203a7ddf.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst listSlice = createSlice({\n  name: \"list\",\n  initialState: {\n    hotelsList: [],\n    deleteHotelName: [],\n  },\n  reducers: {\n    addHotelToList(state, action) {\n      const newHotel = action.payload;\n      const existingHotel = state.hotelsList.find(\n        (hotel) => hotel.name === newHotel.name\n      );\n      if (!existingHotel) {\n        state.hotelsList.push({\n          id: newHotel.name,\n          score: +newHotel.score,\n          name: newHotel.name,\n          src: \"https://www.etstur.com/resources_t/img/hotel/default_image.png\",\n          editTime: newHotel.editTime,\n          logTime: newHotel.logTime,\n        });\n      }\n      state.hotelsList?.sort((a, b) =>\n        a.logTime < b.logTime ? 1 : b.logTime < a.logTime ? -1 : 0\n      );\n    },\n    editHotelAtTheList(state, action) {\n      const newHotel = action.payload;\n      const existingHotel = state.hotelsList.find(\n        (hotel) => hotel.name === newHotel.name\n      );\n      existingHotel.score = +newHotel.score;\n      existingHotel.editTime = newHotel.editTime;\n    },\n    removeHotelFromList(state, action) {\n      const name = action.payload;\n      state.hotelsList = state.hotelsList.filter(\n        (hotel) => hotel.name !== name\n      );\n    },\n    saveHotelName(state, action) {\n      const name = action.payload;\n      state.deleteHotelName = name;\n    },\n  },\n});\n\nexport const listActions = listSlice.actions;\n\nexport default listSlice;\n","import classes from \"./Button.module.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={classes[`${props.className}`]}\n      type={props.type || \"button\"}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"bold\":\"MainNavigation_bold__134On\",\"lighter\":\"MainNavigation_lighter__Hf5Q0\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst sortSlice = createSlice({\n  name: \"sort\",\n  initialState: { sortIsScore: false },\n  reducers: {\n    sort(state, action) {\n      const sortType = action.payload;\n      state.sortIsScore = sortType;\n    },\n  },\n});\n\nexport const sortIsScoreActions = sortSlice.actions;\n\nexport default sortSlice;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"HotelItem_item__39osi\",\"cover\":\"HotelItem_cover__1tiAa\",\"infoBox\":\"HotelItem_infoBox__3FuBJ\",\"hotelName\":\"HotelItem_hotelName__43LTa\",\"score\":\"HotelItem_score__1q-Gr\",\"deleteBtn\":\"HotelItem_deleteBtn__2njJ4\"};","import { useReducer, useCallback } from \"react\";\n\nfunction localeReducer(state, action) {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"error\",\n    };\n  }\n\n  return state;\n}\n\nfunction useLocale(requestFunction, startWithPending = false) {\n  const [localeState, dispatch] = useReducer(localeReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message,\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...localeState,\n  };\n}\n\nexport default useLocale;\n","export function loadLocalListHotels() {\n  const addedHotels = [];\n\n  Object.keys(localStorage).forEach((key) => {\n    let obj = localStorage.getItem(key);\n    addedHotels.unshift(JSON.parse(obj));\n  });\n  return addedHotels;\n}\n\nexport function editHotelScore(hotel) {\n  localStorage.setItem(\n    hotel.name,\n    JSON.stringify({\n      key: hotel.name,\n      id: hotel.name,\n      score: hotel.score,\n      name: hotel.name,\n      src: \"https://www.etstur.com/resources_t/img/hotel/default_image.png\",\n      editTime: hotel.editTime,\n      logTime: hotel.logTime,\n    })\n  );\n  return null;\n}\n\nexport function saveAddedHotel(hotel) {\n  if (Object.keys(localStorage).includes(hotel.name)) {\n    throw new Error(\"Bu otel listede mevcut\");\n  } else {\n    localStorage.setItem(\n      hotel.name,\n      JSON.stringify({\n        key: hotel.name,\n        id: hotel.name,\n        score: hotel.score,\n        name: hotel.name,\n        src: \"https://www.etstur.com/resources_t/img/hotel/default_image.png\",\n        editTime: hotel.editTime,\n        logTime: hotel.logTime,\n      })\n    );\n    return null;\n  }\n}\n\nexport function deleteAddedHotel(name) {\n  localStorage.removeItem(name);\n  return null;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationDiv\":\"Pagination_paginationDiv__yCnjf\",\"pagination\":\"Pagination_pagination__1Z03K\",\"pageLink\":\"Pagination_pageLink__1MeeL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"HotelsList_list__EoyAZ\",\"sorting\":\"HotelsList_sorting__1ZcgP\",\"addButton\":\"HotelsList_addButton__2yGbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\",\"content\":\"Modal_content__3zUnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteModal\":\"HotelDeleteModal_deleteModal__riEBa\",\"deleteModalMain\":\"HotelDeleteModal_deleteModalMain__oTR36\",\"actionButtons\":\"HotelDeleteModal_actionButtons__1s7Hk\"};","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n};\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"increment\":\"Button_increment__2zaHA\",\"decrement\":\"Button_decrement__3Omjk\",\"add\":\"Button_add__1JMLN\",\"addConfirm\":\"Button_addConfirm__1MPZG\",\"deleteHotelBtn\":\"Button_deleteHotelBtn__2uLNn\",\"deleteHotelBtnConfirm\":\"Button_deleteHotelBtnConfirm__3xPre\",\"cancelBtn\":\"Button_cancelBtn__1lpMD\",\"delete\":\"Button_delete__2V5ee\",\"quit\":\"Button_quit__3nqPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport sortSlice from \"./sort-slice\";\nimport listSlice from \"./list-slice\";\n\nconst store = configureStore({\n  reducer: { sort: sortSlice.reducer, list: listSlice.reducer },\n});\n\nexport default store;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Button from \"../UI/Button\";\nimport useLocale from \"../../hooks/use-locale\";\nimport { editHotelScore } from \"../../lib/local-storage\";\nimport { sortIsScoreActions } from \"../../store/sort-slice\";\nimport { listActions } from \"../../store/list-slice\";\n\nimport classes from \"./HotelItem.module.css\";\n\nconst HotelItem = (props) => {\n  const [score, setScore] = useState(+props.score);\n  const [isHover, setIsHover] = useState(false);\n\n  const sortMethodIsScore = useSelector((state) => state.sort.sortIsScore);\n\n  const { sendRequest: sendEditRequest, status: editStatus } =\n    useLocale(editHotelScore);\n  const dispatch = useDispatch();\n\n  const time = new Date();\n  useEffect(() => {\n    if (!sortMethodIsScore) {\n      return;\n    }\n    sendEditRequest({\n      name: props.name,\n      score: score,\n      editTime: Date.parse(time),\n      logTime: props.logTime,\n    });\n  }, [score]);\n\n  useEffect(() => {\n    if (editStatus === \"completed\") {\n      dispatch(\n        listActions.editHotelAtTheList({\n          name: props.name,\n          score: score,\n          editTime: Date.parse(time),\n        })\n      );\n    }\n  }, [editStatus, score]);\n\n  const saveHotelNameHandler = () => {\n    dispatch(listActions.saveHotelName(props.name));\n  };\n\n  const incrementHandler = () => {\n    if (score < 10) {\n      setScore((score) => +(score + 0.1).toFixed(1));\n    }\n    dispatch(sortIsScoreActions.sort(true));\n  };\n\n  const decrementHandler = () => {\n    if (score > 0.1) {\n      setScore((score) => +(score - 0.1).toFixed(1));\n    }\n    dispatch(sortIsScoreActions.sort(true));\n  };\n\n  const deleteButtonAddHandler = () => {\n    setIsHover(true);\n  };\n\n  const deleteButtonKillHandler = () => {\n    setIsHover(false);\n  };\n\n  return (\n    <li className={classes.item}>\n      <div\n        onMouseEnter={deleteButtonAddHandler}\n        onMouseLeave={deleteButtonKillHandler}\n        className={classes.cover}\n      >\n        <img src={props.src} alt=\"hotel-cover\" />\n        <div className={classes.infoBox}>\n          <h1 className={classes.hotelName}>{props.name}</h1>\n          <p className={classes.score}>{score} Puan</p>\n          <Button\n            className={\"increment\"}\n            type=\"button\"\n            onClick={incrementHandler}\n          >\n            PUAN ARTIR\n          </Button>\n          <Button\n            className={\"decrement\"}\n            type=\"button\"\n            onClick={decrementHandler}\n          >\n            PUAN AZALT\n          </Button>\n        </div>\n        <div className={classes.deleteBtn}>\n          {isHover && (\n            <Button\n              className={\"delete\"}\n              type=\"button\"\n              onClick={() => {\n                saveHotelNameHandler();\n                props.onClick();\n              }}\n            >\n              &#x2715;\n            </Button>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default HotelItem;\n","import React from \"react\";\nimport classes from \"./Pagination.module.css\";\n\nconst Pagination = ({ hotelsPerPage, totalHotels, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalHotels / hotelsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className={classes.paginationDiv}>\n      <nav>\n        <ul className={classes.pagination}>\n          <span>\n            <i className=\"arrow left\"></i>\n          </span>\n          {pageNumbers.map((number) => (\n            <li key={number} className={classes.pageItem}>\n              {\n                <button\n                  className={classes.pageLink}\n                  onClick={() => paginate(number)}\n                >\n                  {number}\n                </button>\n              }\n            </li>\n          ))}\n          <span>\n            <i className=\"arrow right\"></i>\n          </span>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport HotelItem from \"./HotelItem\";\nimport { sortIsScoreActions } from \"../../store/sort-slice\";\nimport {\n  sortHotelsAsScore,\n  sortHotelsAsScoreChange,\n} from \"../../lib/sort-functions\";\nimport Pagination from \"../../components/pagination/Pagination\";\nimport classes from \"./HotelsList.module.css\";\n\nconst HotelsList = ({ hotels, onClick }) => {\n  const [isSort, setIsSort] = useState(false);\n  const [hotelsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const indexOfLastHotel = currentPage * hotelsPerPage;\n  const indexOfFirstHotel = indexOfLastHotel - hotelsPerPage;\n  const [isSortingDescending, setIsSortingDescending] = useState(false);\n\n  const sortMethodIsScore = useSelector((state) => state.sort.sortIsScore);\n  const dispatch = useDispatch();\n\n  function changeSortHandler() {\n    dispatch(sortIsScoreActions.sort(false));\n    setIsSortingDescending((isSortingDescending) => !isSortingDescending);\n    setIsSort(true);\n  }\n\n  let sortedHotels = hotels;\n\n  if (sortMethodIsScore) {\n    sortedHotels = sortHotelsAsScoreChange(hotels);\n  }\n\n  if (isSort) {\n    sortedHotels = sortHotelsAsScore(hotels, isSortingDescending);\n  }\n\n  const currentHotels = sortedHotels.slice(indexOfFirstHotel, indexOfLastHotel);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  return (\n    <React.Fragment>\n      <div className={classes.addButton}>\n        <Link to=\"/new-hotel\" className=\"addBtn\">\n          +\n        </Link>\n        <p>OTEL EKLE</p>\n      </div>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          Sort {isSortingDescending ? \"Ascending\" : \"Descending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {currentHotels.map((hotel) => (\n          <HotelItem\n            key={hotel.id}\n            id={hotel.id}\n            name={hotel.name}\n            score={+hotel.score}\n            logTime={hotel.logTime}\n            src={hotel.src}\n            onClick={onClick}\n          />\n        ))}\n      </ul>\n      <Pagination\n        hotelsPerPage={hotelsPerPage}\n        totalHotels={sortedHotels.length}\n        paginate={paginate}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default HotelsList;\n","export const sortHotelsAsScore = (hotels, descending) => {\n  return hotels?.sort((hotelA, hotelB) => {\n    if (descending) {\n      return +hotelA.score < +hotelB.score ? 1 : -1;\n    } else {\n      return +hotelA.score > +hotelB.score ? 1 : -1;\n    }\n  });\n};\n\nexport const sortHotelsAsScoreChange = (hotels) => {\n  return hotels?.sort((hotelA, hotelB) => {\n    return hotelA.score > hotelB.score\n      ? 1\n      : hotelA.score < hotelB.score\n      ? -1\n      : 0 || hotelA.editTime > hotelB.editTime\n      ? 1\n      : hotelA.editTime < hotelB.editTime\n      ? -1\n      : 0;\n  });\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport HotelsList from \"../components/hotels/HotelsList\";\nimport { loadLocalListHotels } from \"../lib/local-storage\";\nimport useLocale from \"../hooks/use-locale\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { listActions } from \"../store/list-slice\";\n\nconst NoHotelsFound = React.lazy(() =>\n  import(\"../components/hotels/NoHotelsFound\")\n);\n\nconst AllHotels = (props) => {\n  const reduxHotelsList = useSelector((state) => state.list.hotelsList);\n  const dispatch = useDispatch();\n\n  const {\n    sendRequest: sendLoadRequest,\n    status,\n    data: loadedHotels,\n  } = useLocale(loadLocalListHotels, true);\n\n  useEffect(() => {\n    sendLoadRequest();\n  }, []);\n\n  useEffect(() => {\n    loadedHotels?.forEach((hotel) =>\n      dispatch(listActions.addHotelToList(hotel))\n    );\n  }, [loadedHotels]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedHotels.length === 0) {\n    return <NoHotelsFound />;\n  }\n\n  const hotelList = [...reduxHotelsList];\n\n  return (\n    <React.Fragment>\n      <HotelsList hotels={hotelList} onClick={props.onShowModal} />\n    </React.Fragment>\n  );\n};\n\nexport default AllHotels;\n","import { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>\n        <span className={classes.bold}>ets</span>\n        <span className={classes.lighter}>tur</span>\n      </div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/hotels-list\" activeClassName={classes.active}>\n              Oteller\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-hotel\" activeClassName={classes.active}>\n              Yeni Otel Ekle\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\n\nimport MainNavigation from \"./MainNavigation\";\n\nimport classes from \"./Layout.module.css\";\n\nconst Layout = (props) => {\n  return (\n    <React.Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport classes from \"./Modal.module.css\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClick} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {ReactDom.createPortal(\n        <Backdrop onClick={props.onClick} />,\n        portalElement\n      )}\n      {ReactDom.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Modal from \"../UI/Modal\";\nimport Button from \"../UI/Button\";\nimport useLocale from \"../../hooks/use-locale\";\nimport { deleteAddedHotel } from \"../../lib/local-storage\";\nimport { listActions } from \"../../store/list-slice\";\n\nimport classes from \"./HotelDeleteModal.module.css\";\n\nconst HotelDeleteModal = (props) => {\n  const reduxDeleteHotelName = useSelector(\n    (state) => state.list.deleteHotelName\n  );\n  const { sendRequest: sendDeleteRequest, status: deleteStatus } =\n    useLocale(deleteAddedHotel);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (deleteStatus !== \"completed\") {\n      return;\n    }\n    dispatch(listActions.removeHotelFromList(reduxDeleteHotelName));\n    const timer = setTimeout(() => {\n      props.setModalIsShown(false);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [deleteStatus, reduxDeleteHotelName, props.setModalIsShown]);\n\n  const deleteHotelHandler = () => {\n    sendDeleteRequest(reduxDeleteHotelName);\n  };\n\n  const closeModalHandler = () => {\n    props.setModalIsShown(false);\n  };\n\n  let deleteButton = (\n    <Button\n      className={\"deleteHotelBtn\"}\n      type=\"button\"\n      onClick={deleteHotelHandler}\n    >\n      OTELİ SİL\n    </Button>\n  );\n\n  if (deleteStatus === \"completed\") {\n    deleteButton = (\n      <Button\n        className={\"deleteHotelBtnConfirm\"}\n        type=\"button\"\n        onClick={deleteHotelHandler}\n      >\n        &#x2713; SİLİNDİ\n      </Button>\n    );\n  }\n\n  return (\n    <Modal onClick={closeModalHandler}>\n      <div className={classes.deleteModal}>\n        <div className={classes.deleteModalMain}>\n          <h1>Oteli Sil</h1>\n          <p>\n            <span>{reduxDeleteHotelName}</span>'i silmek istediğinizden emin\n            misiniz?\n          </p>\n          <div className={classes.actionButtons}>\n            {deleteButton}\n            <Button\n              className={\"cancelBtn\"}\n              type=\"button\"\n              onClick={closeModalHandler}\n            >\n              VAZGEÇ\n            </Button>\n          </div>\n        </div>\n      </div>\n      <Button className={\"quit\"} type=\"button\" onClick={closeModalHandler}>\n        &#x2715;\n      </Button>\n    </Modal>\n  );\n};\n\nexport default HotelDeleteModal;\n","import React, { useState, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AllHotels from \"./pages/AllHotels\";\nimport Layout from \"./components/layout/Layout\";\nimport HotelDeleteModal from \"./components/hotels/HotelDeleteModal\";\n\nconst NewHotel = React.lazy(() => import(\"./pages/NewHotel\"));\n\nfunction App() {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const showModalHandler = () => {\n    setModalIsShown(true);\n  };\n\n  return (\n    <Layout>\n      <Suspense>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/hotels-list\" />\n          </Route>\n          {modalIsShown && (\n            <HotelDeleteModal\n              modalIsShown={modalIsShown}\n              setModalIsShown={setModalIsShown}\n            />\n          )}\n          <Route path=\"/hotels-list\">\n            <AllHotels onShowModal={showModalHandler} />\n          </Route>\n          <Route path=\"/new-hotel\">\n            <NewHotel />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/index\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}