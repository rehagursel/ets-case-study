{"version":3,"sources":["components/UI/Card.module.css","components/hotels/NewHotelForm.module.css","components/UI/Card.js","components/UI/Input.js","components/hotels/NewHotelForm.js","pages/NewHotel.js"],"names":["module","exports","Card","props","className","classes","card","children","Input","React","forwardRef","ref","htmlFor","input","id","label","required","onChange","NewBookForm","useState","isEntered","setIsEntered","nameInputRef","useRef","scoreInputRef","finishFocusedHandler","statusType","status","LoadingSpinner","checkButton","Button","type","onClick","Fragment","when","message","form","onSubmit","event","preventDefault","enteredName","current","value","enteredScore","time","Date","onAddHotel","name","score","logTime","parse","editTime","onFocus","loading","control","min","max","step","warning","error","NewHotel","useLocale","saveAddedHotel","sendSaveRequest","sendRequest","dispatch","useDispatch","history","useHistory","useEffect","timer","setTimeout","push","clearTimeout","NewHotelForm","newHotelData","sortIsScoreActions","sort","listActions","addHotelToList"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,QAAU,8BAA8B,QAAU,8BAA8B,QAAU,8BAA8B,QAAU,gC,wGCKvKC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCQ/BC,EATDC,IAAMC,YAAW,SAACP,EAAOQ,GACrC,OACE,gCACE,uBAAOC,QAAST,EAAMU,MAAMC,GAA5B,SAAiCX,EAAMY,QACvC,+CAAOC,UAAQ,EAACL,IAAKA,GAASR,EAAMU,OAApC,IAA2CI,SAAUd,EAAMc,kB,iBCgHlDC,EA5GK,SAACf,GACnB,MAAkCgB,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAeC,mBACfC,EAAgBD,mBAqBtB,SAASE,IACPJ,GAAa,GAGf,GAAgC,YAA5BlB,EAAMuB,WAAWC,OACnB,OACE,qBAAKvB,UAAU,WAAf,SACE,cAACwB,EAAA,EAAD,MAKN,IAAIC,EACF,cAACC,EAAA,EAAD,CAAQ1B,UAAW,MAAO2B,KAAK,SAASC,QAASP,EAAjD,kBAiBF,MAZgC,cAA5BtB,EAAMuB,WAAWC,SACnBE,EACE,cAACC,EAAA,EAAD,CACE1B,UAAW,aACX2B,KAAK,SACLC,QAASP,EAHX,kCAWF,eAAC,IAAMQ,SAAP,WACE,cAAC,IAAD,CACEC,KAAMd,EACNe,QAAQ,iEAEV,cAAC,EAAD,UACE,uBACE/B,UAAWC,IAAQ+B,KACnBC,SA1DR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAclB,EAAamB,QAAQC,MACnCC,EAAenB,EAAciB,QAAQC,MACrCE,EAAO,IAAIC,KAEjB1C,EAAM2C,WAAW,CACfC,KAAMP,EACNQ,MAAOL,EACPM,QAASJ,KAAKK,MAAMN,GACpBO,SAAUN,KAAKK,MAAMN,MAgDjBQ,QA5CR,WACE/B,GAAa,IAwCT,UAKoB,YAAjBlB,EAAMwB,QACL,qBAAKvB,UAAWC,IAAQgD,QAAxB,SACE,cAACzB,EAAA,EAAD,MAGJ,qBAAKxB,UAAWC,IAAQiD,QAAxB,SACE,cAAC,EAAD,CACElD,UAAWC,IAAQiD,QACnB3C,IAAKW,EACLP,MAAO,gBACPF,MAAO,CACLD,QAAS,OACTE,GAAI,OACJiB,KAAM,YAIZ,qBAAK3B,UAAWC,IAAQiD,QAAxB,SACE,cAAC,EAAD,CACE3C,IAAKa,EACLT,MAAO,OACPF,MAAO,CACLD,QAAS,QACTE,GAAI,QACJiB,KAAM,SACNwB,IAAK,IACLC,IAAK,KACLC,KAAM,UAIX5B,EAC4B,UAA5B1B,EAAMuB,WAAWC,QAChB,qBAAKvB,UAAWC,IAAQqD,QAAxB,SAAkCvD,EAAMuB,WAAWiC,iB,gCC9DhDC,UAtCE,WACf,MAIIC,YAAUC,KAHCC,EADf,EACEC,YACArC,EAFF,EAEEA,OACAgC,EAHF,EAGEA,MAEIM,EAAWC,cACXC,EAAUC,cAEhBC,qBAAU,WACR,GAAe,cAAX1C,EAAJ,CAGA,IAAM2C,EAAQC,YAAW,WACvBJ,EAAQK,KAAK,kBACZ,KAEH,OAAO,WACLC,aAAaH,OAEd,CAAC3C,EAAQwC,IAQZ,OACE,cAAC,IAAMlC,SAAP,UACE,cAACyC,EAAD,CACEhD,WAAY,CAAEC,OAAQA,EAAQgC,MAAOA,GACrCb,WAVmB,SAAC6B,GACxBV,EAASW,IAAmBC,MAAK,IACjCd,EAAgBY,GAChBV,EAASa,IAAYC,eAAeJ","file":"static/js/3.294b9762.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewHotelForm_form__1hjg6\",\"loading\":\"NewHotelForm_loading__3Ts7w\",\"control\":\"NewHotelForm_control__1RA6K\",\"actions\":\"NewHotelForm_actions__2qgvm\",\"warning\":\"NewHotelForm_warning__3hkEo\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst Input = React.forwardRef((props, ref) => {\n  return (\n    <div>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input required ref={ref} {...props.input} onChange={props.onChange} />\n    </div>\n  );\n});\n\nexport default Input;\n","import React, { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport Button from \"../UI/Button\";\nimport Input from \"../UI/Input\";\n\nimport classes from \"./NewHotelForm.module.css\";\n\nconst NewBookForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n\n  const nameInputRef = useRef();\n  const scoreInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredScore = scoreInputRef.current.value;\n    const time = new Date();\n\n    props.onAddHotel({\n      name: enteredName,\n      score: enteredScore,\n      logTime: Date.parse(time),\n      editTime: Date.parse(time),\n    });\n  }\n\n  function formFocusedHandler() {\n    setIsEntered(true);\n  }\n\n  function finishFocusedHandler() {\n    setIsEntered(false);\n  }\n\n  if (props.statusType.status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  let checkButton = (\n    <Button className={\"add\"} type=\"submit\" onClick={finishFocusedHandler}>\n      EKLE\n    </Button>\n  );\n\n  if (props.statusType.status === \"completed\") {\n    checkButton = (\n      <Button\n        className={\"addConfirm\"}\n        type=\"submit\"\n        onClick={finishFocusedHandler}\n      >\n        &#x2713; EKLENDİ\n      </Button>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={isEntered}\n        message=\"Are you sure, you want to leave? Entered data will be lost!!\"\n      />\n      <Card>\n        <form\n          className={classes.form}\n          onSubmit={submitFormHandler}\n          onFocus={formFocusedHandler}\n        >\n          {props.status === \"pending\" && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n          <div className={classes.control}>\n            <Input\n              className={classes.control}\n              ref={nameInputRef}\n              label={\"Otel Adı\"}\n              input={{\n                htmlFor: \"name\",\n                id: \"name\",\n                type: \"text\",\n              }}\n            />\n          </div>\n          <div className={classes.control}>\n            <Input\n              ref={scoreInputRef}\n              label={\"Puan\"}\n              input={{\n                htmlFor: \"score\",\n                id: \"score\",\n                type: \"number\",\n                min: \"1\",\n                max: \"10\",\n                step: \".1\",\n              }}\n            />\n          </div>\n          {checkButton}\n          {props.statusType.status === \"error\" && (\n            <div className={classes.warning}>{props.statusType.error}</div>\n          )}\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default NewBookForm;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport NewHotelForm from \"../components/hotels/NewHotelForm\";\nimport useLocale from \"../hooks/use-locale\";\nimport { saveAddedHotel } from \"../lib/local-storage\";\nimport { listActions } from \"../store/list-slice\";\nimport { sortIsScoreActions } from \"../store/sort-slice\";\n\nconst NewHotel = () => {\n  const {\n    sendRequest: sendSaveRequest,\n    status,\n    error,\n  } = useLocale(saveAddedHotel);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status !== \"completed\") {\n      return;\n    }\n    const timer = setTimeout(() => {\n      history.push(\"/hotels-list\");\n    }, 600);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [status, history]);\n\n  const loadHotelHandler = (newHotelData) => {\n    dispatch(sortIsScoreActions.sort(false));\n    sendSaveRequest(newHotelData);\n    dispatch(listActions.addHotelToList(newHotelData));\n  };\n\n  return (\n    <React.Fragment>\n      <NewHotelForm\n        statusType={{ status: status, error: error }}\n        onAddHotel={loadHotelHandler}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default NewHotel;\n"],"sourceRoot":""}